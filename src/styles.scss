@import 'variables';

:root {
  /* Defaults */
  --border-radius-default: 4px;
  --box-shadow-default: 0 2px 4px;
  --box-shadow-default-hover: 0 4px 8px;

  /* Grid */
  --grid-columns: 12;
  --grid-column-width: calc(1% / var(--grid-columns) * 100);
  --grid-gutter: 20px;
  --grid-column-actual-width: calc(var(--grid-column-width) - var(--grid-gutter));

  /* Breakpoints */
  --breakpoint-sm: $breakpoint-sm;
  --breakpoint-md: $breakpoint-md;
  --breakpoint-lg: $breakpoint-lg;
  --breakpoint-xl: $breakpoint-xl;

  /* Containers */
  --width-container-sm: 540px;
  --width-container-md: 720px;
  --width-container-lg: 960px;
  --width-container-xl: 1140px;

  /* Page header */
  --height-page-header: 50px;
  --height-margin-page-header: 20px;
  --margin-page-header: 0 0 var(--height-margin-page-header);
  --box-shadow-page-header: 0 2px 4px;

  /* Page footer */
  --margin-page-footer: 20px 0;
  --padding-page-footer: 16px 0 0;

  /* Loading spinner */
  --width-spinner-visual: 64px;
  --width-spinner-icon: 48px;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html,
body {
  margin: 0;
  padding: 0;
  overflow: auto;
  box-sizing: border-box;
}

body {
  background: var(--color-default-background);
  color: var(--color-default-foreground);
  font-family: Geomanist, sans-serif;
  font-size: 16px;
  line-height: 1.5;
}

::selection,
::-moz-selection {
  background: var(--color-selection-background);
}

a {
  color: var(--color-link-foreground);
  transition: color 0.2s;

  &:hover,
  &:focus {
    color: var(--color-link-hover-foreground);
  }
}

h1 {
  font-weight: normal;
  font-size: 40px;
  margin: 0;
  padding: 0;
}

h2 {
  font-weight: normal;
}

/*
 * Superglobal classes
 */
.spritesheet {
  display: none;
}

.text-center {
  text-align: center;
}

.button-container {
  a {
    display: inline-block;
    padding: 4px 16px;
    margin-right: 0.5em;
    position: relative;
    transition: top 0.2s, box-shadow 0.2s;
    border-radius: var(--border-radius-default);
    box-shadow: var(--box-shadow-default) var(--color-default-shadow);
    text-decoration: none;
    background: var(--color-neutral-03) linear-gradient(to bottom, var(--color-neutral-02), var(--color-neutral-04));
    color: var(--color-default-foreground);

    &:hover {
      top: -0.5px;
      box-shadow: var(--box-shadow-default-hover) var(--color-default-shadow);
      text-shadow: 0 1px 1px var(--color-default-shadow);
    }

    &:last-child {
      margin-right: 0;
    }
  }

  .primary {
    background: var(--color-primary-b-05) linear-gradient(to bottom, var(--color-primary-b-04), var(--color-primary-b-06));
    color: var(--color-primary-b-10);
  }
}

/* Shared loading spinner style */
.load-spinner {
  width: var(--width-spinner-visual);
  height: var(--width-spinner-visual);
  margin: 16px auto;
  position: relative;
  color: var(--color-primary-a-01);

  &::before,
  & > div {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
  }

  $speed: 800ms;

  /* Background block */
  &::before {
    content: '';
    background-color: var(--color-primary-a-08);
    border-radius: var(--border-radius-default);
    animation-duration: $speed;
    animation-name: load-spin;
    animation-iteration-count: infinite;
  }

  .border {
    border: 2px solid var(--color-primary-a-08);
    border-radius: var(--border-radius-default);
    animation-delay: 80ms;
    animation-duration: $speed;
    animation-name: load-spin;
    animation-iteration-count: infinite;
  }

  .logo {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  svg {
    width: var(--width-spinner-icon);
    height: var(--width-spinner-icon);
  }
}

@keyframes load-spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(89deg); }
}

/* EmojiOne */
.emojione {
  height: auto;
  width: 1.5em;
  display: inline-block;
  margin: -0.1em 0 0.1em;
  padding: 0;
  line-height: normal;
  vertical-align: middle;
}

/*
 * Container
 */
.container {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: calc(var(--grid-gutter) / 2);
  padding-right: calc(var(--grid-gutter) / 2);
}

/* sm */
@media screen and (min-width: $breakpoint-sm) {
  .container {
    width: var(--width-container-sm);
  }
}

/* md */
@media screen and (min-width: $breakpoint-md) {
  .container {
    width: var(--width-container-md);
  }
}

/* lg */
@media screen and (min-width: $breakpoint-lg) {
  .container {
    width: var(--width-container-lg);
  }
}

/* xl */
@media screen and (min-width: $breakpoint-xl) {
  .container {
    width: var(--width-container-xl);
  }
}

/*
 * Grid
 */
.grid {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), var(--grid-column-actual-width));
  grid-gap: var(--grid-gutter);
  justify-content: center;
  margin-left: calc(var(--grid-gutter) / -2);
  margin-right: calc(var(--grid-gutter) / -2);
}
